package com.tinkler.it;

import android.app.Fragment;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.Spinner;
import android.widget.Toast;

import java.util.ArrayList;

import api.QCApi;
import me.dm7.barcodescanner.zbar.Result;
import me.dm7.barcodescanner.zbar.ZBarScannerView;
import model.MessageType;

public class ScanFragmentActivity extends Fragment implements ZBarScannerView.ResultHandler {

    private static final String TAG = ScanFragmentActivity.class.toString();

    private ZBarScannerView mScannerView;
    private Spinner mTinklerTypeSpinner;
    private ArrayList<MessageType> mTinklerTypesArray;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        mScannerView = new ZBarScannerView(getActivity());
        mTinklerTypesArray = new ArrayList<MessageType>();

        if (QCApi.isOnline(getActivity())) {
            QCApi.getMessageTypes(new QCApi.GetAllMessageTypesCallback() {
                @Override
                public void onCompleteGetAllMessageTypes(ArrayList<MessageType> messageTypes, boolean success) {
                    for (int i = 0; i < messageTypes.size(); i++) {
                        mTinklerTypesArray.addAll(messageTypes);
                    }
                }
            });
        }

        mTinklerTypeSpinner = new Spinner(getActivity());
        mTinklerTypeSpinner.setVisibility(View.GONE);
        mScannerView.addView(mTinklerTypeSpinner);

        return mScannerView;
    }

    @Override
    public void onStart() {
        super.onStart();
        if (!QCApi.isOnline(getActivity())) {
            mScannerView.stopCamera();
            //TODO show warning
        }
    }

    @Override
    public void onResume() {
        super.onResume();
        mScannerView.setResultHandler(this); // Register ourselves as a handler for scan results.
        mScannerView.startCamera();          // Start camera on resume
    }

    @Override
    public void onPause() {
        super.onPause();
        mScannerView.stopCamera();           // Stop camera on pause
    }

    @Override
    public void handleResult(Result rawResult) {

        String qrUrl = rawResult.getContents();

        if (qrUrl.contains("http://tinkler.it")) {
            String objectData = qrUrl.split("\\?")[1];
            final String scannedTinklerId = objectData.split("!")[0];
            final String scannedTlinkerType = objectData.split("!")[1].split("\\&")[1];
            final String scannedTinklerKey = objectData.split("!")[1].split("\\&")[0];

            if (QCApi.isOnline(getActivity())) {
                QCApi.validateQrCode(scannedTinklerId, Integer.parseInt(scannedTinklerKey), new QCApi.ValidateQRCodeCallback() {
                    @Override
                    public void onValidateQRCode(boolean success, boolean isValidated, boolean allowCustom, boolean isBlocked, boolean isSelfTinkler) {
                        if (isSelfTinkler) {
                            Toast.makeText(getActivity(), "This Tinkler belongs to you", Toast.LENGTH_LONG).show();
                            //resetCamera();
                            chooseMessageType(allowCustom, (String)scannedTlinkerType);
                        } else if (isBlocked) {
                            Toast.makeText(getActivity(), "This conversation is blocked", Toast.LENGTH_LONG).show();
                            resetCamera();
                        } else if (isValidated) {
                            chooseMessageType(allowCustom, (String)scannedTlinkerType);
                        } else {
                            Toast.makeText(getActivity(), "This QR-Code is not valid", Toast.LENGTH_LONG).show();
                            resetCamera();
                        }
                    }
                });
            } else {
                Toast.makeText(getActivity(), "You need network connection to scan Tinklers", Toast.LENGTH_LONG).show();
                resetCamera();
            }
        } else {
            Toast.makeText(getActivity(), "This QR-Code was not generated by Tinkler", Toast.LENGTH_LONG).show();
            resetCamera();
        }
    }

    private void resetCamera() {
        mScannerView.stopCamera();
        mScannerView.startCamera();
    }

    private void chooseMessageType(boolean allowCustom, String scannedTinklerType) {

        ArrayList<String> messagesType = new ArrayList<String>();

        for (int i = 0; i < mTinklerTypesArray.size(); i++){
            if (mTinklerTypesArray.get(i).getName().equals("Custom Message") && allowCustom){
                messagesType.add(mTinklerTypesArray.get(i).getName());
            } else if (mTinklerTypesArray.get(i).getTinklerType() != null && mTinklerTypesArray.get(i).getTinklerType().get("typeName").equals(scannedTinklerType)){
                messagesType.add(mTinklerTypesArray.get(i).getName());
            }
        }

        ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(getActivity(), android.R.layout.simple_spinner_item, messagesType);
        dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        mTinklerTypeSpinner.setAdapter(dataAdapter);

        mTinklerTypeSpinner.setVisibility(View.VISIBLE);
    }
}